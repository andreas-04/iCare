{
  "version": 3,
  "sources": ["../../@mui/joy/Accordion/Accordion.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"accordionId\", \"component\", \"color\", \"children\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"variant\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getAccordionUtilityClass } from './accordionClasses';\nimport useSlot from '../utils/useSlot';\nimport AccordionContext from './AccordionContext';\nimport { StyledListItem } from '../ListItem/ListItem';\nimport accordionDetailsClasses from '../AccordionDetails/accordionDetailsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    expanded,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`]\n  };\n  return composeClasses(slots, getAccordionUtilityClass, {});\n};\nconst AccordionRoot = styled(StyledListItem, {\n  name: 'JoyAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  borderBottom: 'var(--Accordion-borderBottom)',\n  '&[data-first-child]': {\n    '--ListItem-radius': 'var(--unstable_List-childRadius) var(--unstable_List-childRadius) 0 0'\n  },\n  '&[data-last-child]': {\n    '--ListItem-radius': '0 0 var(--unstable_List-childRadius) var(--unstable_List-childRadius)',\n    '& [aria-expanded=\"true\"]': {\n      '--ListItem-radius': '0'\n    },\n    [`& .${accordionDetailsClasses.root}`]: {\n      '--AccordionDetails-radius': '0 0 var(--unstable_List-childRadius) var(--unstable_List-childRadius)'\n    }\n  },\n  '&:not([data-first-child]):not([data-last-child])': {\n    '--ListItem-radius': '0'\n  }\n});\n/**\n *\n * Demos:\n *\n * - [Accordion](https://mui.com/joy-ui/react-accordion/)\n *\n * API:\n *\n * - [Accordion API](https://mui.com/joy-ui/api/accordion/)\n */\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyAccordion'\n  });\n  const {\n      accordionId: idOverride,\n      component = 'div',\n      color = 'neutral',\n      children,\n      defaultExpanded = false,\n      disabled = false,\n      expanded: expandedProp,\n      onChange,\n      variant = 'plain',\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const accordionId = useId(idOverride);\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const contextValue = React.useMemo(() => ({\n    accordionId,\n    expanded,\n    disabled,\n    toggle: handleChange\n  }), [accordionId, expanded, disabled, handleChange]);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    variant,\n    expanded,\n    disabled,\n    nested: true // for the ListItem styles\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: AccordionRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n      children: React.Children.map(children, (child, index) => /*#__PURE__*/React.isValidElement(child) && index === 0 ? /*#__PURE__*/React.cloneElement(child, {\n        // @ts-ignore: to let ListItem knows when to apply margin(Inline|Block)Start\n        'data-first-child': ''\n      }) : child)\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The id to be used in the AccordionDetails which is controlled by the AccordionSummary.\n   * If not provided, the id is autogenerated.\n   */\n  accordionId: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Accordion if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'plain'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Accordion;"],
  "mappings": "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",
  "names": ["Accordion", "_jsx", "PropTypes"]
}
